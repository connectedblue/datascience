{
    "contents" : "rankall <- function(outcome, num = \"best\") {\n  ## Read outcome data\n  hdata<-read.csv(\"outcome-of-care-measures.csv\", colClasses=\"character\")\n\n  # Mapping of correct outcome string to column number in hdata table\n  outcomes<-data.frame(Cause=c(\"heart attack\", \"heart failure\", \"pneumonia\"), Outcome_Col=c(11,17,23))\n  \n  ## Check that state and outcome are valid\n  if (!(outcome %in% outcomes$Cause)) {\n    stop (\"invalid outcome\")\n  }\n\n  ## For each state, find the hospital of the given rank\n\n  # work out which column in the hdata corresponds to the requested outcome\n  outcome_col<-outcomes[outcomes$Cause==outcome,]$Outcome_Col\n  \n  # select the subset of records from hdata and set the column names\n  all_outcomes<-subset(hdata, select=c(2,7, outcome_col))\n  colnames(all_outcomes)<-c(\"hospital\", \"state\", \"outcome\")\n  \n  # Make outcome column numeric, remove NAs and sort by state, Outcome and Hospital name\n  all_outcomes[,3]<-as.numeric(all_outcomes[,3])\n  all_outcomes<-na.omit(all_outcomes)\n  all_outcomes<-all_outcomes[order(all_outcomes$state, all_outcomes$outcome,all_outcomes$hospital),]\n  \n  # split into seperate state dataframes\n  all_outcomes<-split(all_outcomes, all_outcomes$state)\n  \n  ## Return a data frame with the hospital names and the\n  ## (abbreviated) state name\n  \n  # Create an empty dataframe to store the result in for each state\n  result<-data.frame(hospital=character(), state=character(), stringsAsFactors = FALSE)\n  states<-names(all_outcomes)\n  \n  for (i in 1:length(states)) {\n    # get the state name and the subset of state data\n    state_name<-states[i]\n    state_data<-all_outcomes[[state_name]]\n    \n    # work out which row should be selected for the state and store in n\n    n=num\n    # If the num contains best or worst, select first or last row respectively\n    if (num==\"best\") {n=1}\n    if (num==\"worst\") {n=nrow(state_data)}\n  \n    if (n>nrow(state_data)) {\n      hospital<-\"<NA>\"\n    }\n    else {\n      hospital<-state_data$hospital[n]\n    }\n  result[nrow(result)+1,]<-c(hospital, state_name)\n  }\n\n  \n  # Return the hospital with the ranking of num\n  result\n}",
    "created" : 1454257241420.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2643438649",
    "id" : "50209139",
    "lastKnownWriteTime" : 1454262311,
    "path" : "C:/Users/cs/Dropbox/Connected Blue/Training/data science/git/datascience/R-Programming/week 4/rprog-data-ProgAssignment3-data/rankall.R",
    "project_path" : "rprog-data-ProgAssignment3-data/rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}